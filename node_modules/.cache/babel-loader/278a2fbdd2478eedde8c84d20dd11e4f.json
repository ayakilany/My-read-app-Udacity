{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\SearchResult.js\";\nimport EachBook from \"./EachBook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = ({\n  searches,\n  handleupdate,\n  searchQuery\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books-results\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"books-grid\",\n      children: searches.filter(b => (b.title + b.authors.join()).toLowerCase().includes(serQuery.toLowerCase())).map(book => /*#__PURE__*/_jsxDEV(EachBook, {\n        book: book,\n        handleupdate: handleupdate\n      }, book.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 8\n  }, this);\n};\n\n_c = SearchResult;\nAddAndSearch.propTypes = {\n  searches: PropTypes.array.isRequired,\n  handleupdate: PropTypes.func.isRequired\n};\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/SearchResult.js"],"names":["EachBook","SearchResult","searches","handleupdate","searchQuery","filter","b","title","authors","join","toLowerCase","includes","serQuery","map","book","AddAndSearch","propTypes","PropTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;;AACA,MAAMC,YAAY,GAAC,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,YAAV;AAAuBC,EAAAA;AAAvB,CAAD,KAAuC;AAE1D,sBACO;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,2BACP;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACCF,QAAQ,CAACG,MAAT,CAAiBC,CAAD,IAAK,CAACA,CAAC,CAACC,KAAF,GAAQD,CAAC,CAACE,OAAF,CAAUC,IAAV,EAAT,EAA2BC,WAA3B,GAAyCC,QAAzC,CAAkDC,QAAQ,CAACF,WAAT,EAAlD,CAArB,EACAG,GADA,CACKC,IAAD,iBACL,QAAC,QAAD;AACA,QAAA,IAAI,EAAEA,IADN;AAGA,QAAA,YAAY,EAAEX;AAHd,SAEKW,IAAI,CAACP,KAFV;AAAA;AAAA;AAAA;AAAA,cAFC;AADD;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,UADP;AAeC,CAjBD;;KAAMN,Y;AAkBNc,YAAY,CAACC,SAAb,GAAyB;AACrBd,EAAAA,QAAQ,EAAEe,SAAS,CAACC,KAAV,CAAgBC,UADL;AAErBhB,EAAAA,YAAY,EAAEc,SAAS,CAACG,IAAV,CAAeD;AAFR,CAAzB;AAII,eAAelB,YAAf","sourcesContent":["import EachBook from \"./EachBook\";\r\nconst SearchResult=({searches,handleupdate,searchQuery})=>{\r\n\r\nreturn(        \r\n       <div className=\"search-books-results\">\r\n<ol className=\"books-grid\">\r\n{searches.filter((b)=>(b.title+b.authors.join()).toLowerCase().includes(serQuery.toLowerCase()))\r\n.map((book) => (\r\n<EachBook\r\nbook={book}\r\nkey={book.title}\r\nhandleupdate={handleupdate}\r\n/>\r\n))\r\n}\r\n</ol>\r\n</div>)\r\n\r\n}\r\nAddAndSearch.propTypes = {\r\n    searches: PropTypes.array.isRequired,\r\n    handleupdate: PropTypes.func.isRequired,\r\n};\r\n    export default SearchResult;"]},"metadata":{},"sourceType":"module"}