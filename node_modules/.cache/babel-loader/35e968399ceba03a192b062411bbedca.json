{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport ListOfBook from \"./ListOfBook\";\nimport AddAndSearch from \"./AddAndSearch\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let navigate = useNavigate();\n  const bookShelfs = [{\n    name: \"Currently Reading\",\n    id: 1,\n    shelfname: \"currentlyReading\"\n  }, {\n    name: \"Want to Read\",\n    id: 2,\n    shelfname: \"wantToRead\"\n  }, {\n    name: \"Read\",\n    id: 3,\n    shelfname: \"read\"\n  }]; //updating the shelf of the book when selected another one \n\n  const handleupdate = (b, event) => {\n    b.shelf = event;\n    updateShelf(b, event);\n  };\n\n  const updateShelf = (b, s) => {\n    const newshelf = async () => {\n      await BooksAPI.update(b, s);\n    };\n\n    newshelf();\n    navigate(\"/\");\n  }; //set list of books to empty arry \n\n\n  const [listBook, setListBook] = useState([]);\n  useEffect(() => {\n    const book = async () => {\n      const result = await BooksAPI.getAll();\n      setListBook(result);\n    };\n\n    book();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ListOfBook, {\n        bookShelfs: bookShelfs,\n        listBook: listBook,\n        handleupdate: handleupdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(AddAndSearch, {\n        listBook: listBook,\n        handleupdate: handleupdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mbexzh2/AyiqwG97BU8LqmOAZWA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/App.js"],"names":["useState","useEffect","Routes","Route","useNavigate","ListOfBook","AddAndSearch","BooksAPI","App","navigate","bookShelfs","name","id","shelfname","handleupdate","b","event","shelf","updateShelf","s","newshelf","update","listBook","setListBook","book","result","getAll"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACf,MAAIC,QAAQ,GAACL,WAAW,EAAxB;AAEE,QAAMM,UAAU,GAAG,CACjB;AAAEC,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,EAAE,EAAE,CAAjC;AAAoCC,IAAAA,SAAS,EAAC;AAA9C,GADiB,EAEjB;AAAEF,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,EAAE,EAAE,CAA5B;AAA+BC,IAAAA,SAAS,EAAC;AAAzC,GAFiB,EAGjB;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,EAAE,EAAE,CAApB;AAAsBC,IAAAA,SAAS,EAAC;AAAhC,GAHiB,CAAnB,CAHa,CAQf;;AACE,QAAMC,YAAY,GAAC,CAACC,CAAD,EAAGC,KAAH,KACnB;AACGD,IAAAA,CAAC,CAACE,KAAF,GAAQD,KAAR;AACCE,IAAAA,WAAW,CAACH,CAAD,EAAIC,KAAJ,CAAX;AAEH,GALD;;AAOA,QAAME,WAAW,GAAC,CAACH,CAAD,EAAGI,CAAH,KAAO;AACzB,UAAMC,QAAQ,GAAC,YAAS;AAC1B,YAAMb,QAAQ,CAACc,MAAT,CAAgBN,CAAhB,EAAkBI,CAAlB,CAAN;AACC,KAFC;;AAIFC,IAAAA,QAAQ;AACRX,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACC,GAPC,CAhBa,CAwBf;;;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,IAAI,GAAG,YAAY;AACvB,YAAMC,MAAM,GAAG,MAAMlB,QAAQ,CAACmB,MAAT,EAArB;AACAH,MAAAA,WAAW,CAACE,MAAD,CAAX;AAED,KAJD;;AAKAD,IAAAA,IAAI;AAEL,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,OAAO,eACL,QAAC,UAAD;AACA,QAAA,UAAU,EAAEd,UADZ;AAEE,QAAA,QAAQ,EAAEY,QAFZ;AAGE,QAAA,YAAY,EAAER;AAHhB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAAE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEQ,QAAxB;AAAkC,QAAA,YAAY,EAAER;AAAhD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArDQN,G;UACIJ,W;;;KADJI,G;AAuDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport ListOfBook from \"./ListOfBook\";\r\nimport AddAndSearch from \"./AddAndSearch\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nfunction App() {\r\nlet navigate=useNavigate();\r\n\r\n  const bookShelfs = [\r\n    { name: \"Currently Reading\", id: 1 ,shelfname:\"currentlyReading\"},\r\n    { name: \"Want to Read\", id: 2 ,shelfname:\"wantToRead\"},\r\n    { name: \"Read\", id: 3,shelfname:\"read\"},\r\n  ];\r\n//updating the shelf of the book when selected another one \r\n  const handleupdate=(b,event)=>\r\n  { \r\n     b.shelf=event;   \r\n      updateShelf(b, event)\r\n    \r\n  }  \r\n\r\n  const updateShelf=(b,s)=>{\r\n  const newshelf=async()=>{\r\nawait BooksAPI.update(b,s);\r\n}\r\n\r\nnewshelf();\r\nnavigate(\"/\")\r\n}  \r\n//set list of books to empty arry \r\nconst [listBook, setListBook] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const book = async () => {\r\n      const result = await BooksAPI.getAll();\r\n      setListBook(result);\r\n   \r\n    };\r\n    book();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        element={\r\n          <ListOfBook\r\n          bookShelfs={bookShelfs}\r\n            listBook={listBook}\r\n            handleupdate={handleupdate}\r\n          />\r\n        }\r\n      />\r\n      <Route path=\"/search\" element={<AddAndSearch listBook={listBook} handleupdate={handleupdate} />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}