{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\AddAndSearch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchResult from \"./SearchResult\"; //the add button will display this page with a search bar\n// when searching for a book with title or author will be shown on the page\n//when select a different shelf will call the handleupdate func to update the shelf\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAndSearch = ({\n  listBook,\n  handleupdate\n}) => {\n  _s();\n\n  const [searches, setSearches] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearchQuery(e.target.value.trim());\n  };\n\n  useEffect(() => {\n    let cleaner = true;\n\n    const book = async () => {\n      if (searchQuery !== \"\") {\n        const result = await BooksAPI.search(searchQuery);\n\n        if (result.error) {\n          setSearches([]);\n        } else {\n          if (cleaner) {\n            setSearches(result.concat(listBook.filter(i => i.id)));\n            console.log(result);\n          }\n        }\n      }\n    };\n\n    book();\n    return () => {\n      cleaner = false;\n      setSearches([]);\n    };\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"close-search\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, or author\",\n            value: searchQuery,\n            onChange: event => {\n              handleSearch(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchResult, {\n        searches: searches,\n        handleupdate: handleupdate,\n        searchQuery: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddAndSearch, \"1Xj4tNUfKHvk1lZp0Z4kfXdW0eU=\");\n\n_c = AddAndSearch;\nAddAndSearch.propTypes = {\n  listBook: PropTypes.array.isRequired,\n  handleupdate: PropTypes.func.isRequired\n};\nexport default AddAndSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAndSearch\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/AddAndSearch.js"],"names":["PropTypes","Link","useState","useEffect","BooksAPI","SearchResult","AddAndSearch","listBook","handleupdate","searches","setSearches","searchQuery","setSearchQuery","handleSearch","e","preventDefault","target","value","trim","cleaner","book","result","search","error","concat","filter","i","id","console","log","event","propTypes","array","isRequired","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,QADoB;AACXC,EAAAA;AADW,CAAD,KAGf;AAAA;;AACJ,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACEH,IAAAA,cAAc,CAACE,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAD,CAAd;AAAuC,GAFzC;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,OAAO,GAAC,IAAZ;;AACA,UAAMC,IAAI,GAAG,YAAY;AACvB,UAAGT,WAAW,KAAG,EAAjB,EAAoB;AAClB,cAAMU,MAAM,GAAG,MAAMjB,QAAQ,CAACkB,MAAT,CAAgBX,WAAhB,CAArB;;AACA,YAAGU,MAAM,CAACE,KAAV,EAAgB;AAClBb,UAAAA,WAAW,CAAC,EAAD,CAAX;AAAgB,SADd,MAEE;AACF,cAAGS,OAAH,EAAW;AACTT,YAAAA,WAAW,CAACW,MAAM,CAACG,MAAP,CAAcjB,QAAQ,CAACkB,MAAT,CAAiBC,CAAD,IAAKA,CAAC,CAACC,EAAvB,CAAd,CAAD,CAAX;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACD;AACF;AAAC;AACH,KAXD;;AAYAD,IAAAA,IAAI;AACJ,WAAM,MAAI;AACVD,MAAAA,OAAO,GAAC,KAAR;AACET,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KAHC;AAID,GAnBQ,EAmBN,CAACC,WAAD,CAnBM,CAAT;AAqBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,4BAFd;AAGE,YAAA,KAAK,EAAEA,WAHT;AAIE,YAAA,QAAQ,EAAGmB,KAAD,IAAW;AACnBjB,cAAAA,YAAY,CAACiB,KAAD,CAAZ;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBG,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAErB,QAAxB;AAAkC,QAAA,YAAY,EAAED,YAAhD;AAA8D,QAAA,WAAW,EAAEG;AAA3E;AAAA;AAAA;AAAA;AAAA,cAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CArDD;;GAAML,Y;;KAAAA,Y;AAsDNA,YAAY,CAACyB,SAAb,GAAyB;AACvBxB,EAAAA,QAAQ,EAAEP,SAAS,CAACgC,KAAV,CAAgBC,UADH;AAEvBzB,EAAAA,YAAY,EAAER,SAAS,CAACkC,IAAV,CAAeD;AAFN,CAAzB;AAIA,eAAe3B,YAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useState,useEffect} from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport SearchResult from \"./SearchResult\";\r\n//the add button will display this page with a search bar\r\n// when searching for a book with title or author will be shown on the page\r\n//when select a different shelf will call the handleupdate func to update the shelf\r\nconst AddAndSearch = ({\r\n  listBook,handleupdate\r\n  \r\n}) => {\r\n  const [searches,setSearches]=useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const handleSearch = (e) => {\r\n  e.preventDefault();\r\n    setSearchQuery(e.target.value.trim());}\r\n\r\n  useEffect(() => {\r\n    let cleaner=true;\r\n    const book = async () => {\r\n      if(searchQuery!==\"\"){\r\n        const result = await BooksAPI.search(searchQuery);\r\n        if(result.error){\r\n      setSearches([])}\r\n      else{\r\n        if(cleaner){\r\n          setSearches(result.concat(listBook.filter((i)=>i.id)))\r\n          console.log(result)\r\n        }\r\n      }}\r\n    };\r\n    book();\r\n    return()=>{\r\n    cleaner=false;\r\n      setSearches([])\r\n  }\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, or author\"\r\n              value={searchQuery}\r\n              onChange={(event) => {\r\n                handleSearch(event);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n         <SearchResult searches={searches} handleupdate={handleupdate} searchQuery={searchQuery} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nAddAndSearch.propTypes = {\r\n  listBook: PropTypes.array.isRequired,\r\n  handleupdate: PropTypes.func.isRequired,\r\n};\r\nexport default AddAndSearch;\r\n"]},"metadata":{},"sourceType":"module"}