{"ast":null,"code":"import _slicedToArray from\"E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import\"./App.css\";import{useState,useEffect}from\"react\";import{Routes,Route,useNavigate}from\"react-router-dom\";import ListOfBook from\"./ListOfBook\";import AddAndSearch from\"./AddAndSearch\";import*as BooksAPI from\"./BooksAPI\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var navigate=useNavigate();var bookShelfs=[{name:\"Currently Reading\",id:1,shelfname:\"currentlyReading\"},{name:\"Want to Read\",id:2,shelfname:\"wantToRead\"},{name:\"Read\",id:3,shelfname:\"read\"}];//updating the shelf of the book when selected another one\nvar handleupdate=function handleupdate(b,event){b.shelf=event;updateShelf(b,event);};var updateShelf=function updateShelf(b,s){var newshelf=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return BooksAPI.update(b,s);case 2:case\"end\":return _context.stop();}}},_callee);}));return function newshelf(){return _ref.apply(this,arguments);};}();newshelf();navigate(\"/\");};//initilaize list of books to empty arry\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),listBook=_useState2[0],setListBook=_useState2[1];//get all books and set the list of book with results\nuseEffect(function(){var book=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return BooksAPI.getAll();case 2:result=_context2.sent;setListBook(result);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function book(){return _ref2.apply(this,arguments);};}();book();return function(){setListBook([]);};},[]);return/*#__PURE__*/ (//using routes to navigate between pages and updating the url\n_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(ListOfBook,{bookShelfs:bookShelfs,listBook:listBook,handleupdate:handleupdate})}),/*#__PURE__*/_jsx(Route,{path:\"/search\",element:/*#__PURE__*/_jsx(AddAndSearch,{listBook:listBook,handleupdate:handleupdate})})]}));}export default App;","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/App.js"],"names":["useState","useEffect","Routes","Route","useNavigate","ListOfBook","AddAndSearch","BooksAPI","App","navigate","bookShelfs","name","id","shelfname","handleupdate","b","event","shelf","updateShelf","s","newshelf","update","listBook","setListBook","book","getAll","result"],"mappings":"qiBAAA,MAAO,WAAP,CACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,WAAxB,KAA2C,kBAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,YAA1B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAIC,CAAAA,QAAQ,CAAGL,WAAW,EAA1B,CAGA,GAAMM,CAAAA,UAAU,CAAG,CACjB,CAAEC,IAAI,CAAE,mBAAR,CAA6BC,EAAE,CAAE,CAAjC,CAAoCC,SAAS,CAAE,kBAA/C,CADiB,CAEjB,CAAEF,IAAI,CAAE,cAAR,CAAwBC,EAAE,CAAE,CAA5B,CAA+BC,SAAS,CAAE,YAA1C,CAFiB,CAGjB,CAAEF,IAAI,CAAE,MAAR,CAAgBC,EAAE,CAAE,CAApB,CAAuBC,SAAS,CAAE,MAAlC,CAHiB,CAAnB,CAMA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAIC,KAAJ,CAAc,CACjCD,CAAC,CAACE,KAAF,CAAUD,KAAV,CACAE,WAAW,CAACH,CAAD,CAAIC,KAAJ,CAAX,CACD,CAHD,CAIA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACH,CAAD,CAAII,CAAJ,CAAU,CAC5B,GAAMC,CAAAA,QAAQ,0FAAG,yJACTb,CAAAA,QAAQ,CAACc,MAAT,CAAgBN,CAAhB,CAAmBI,CAAnB,CADS,uDAAH,kBAARC,CAAAA,QAAQ,0CAAd,CAGAA,QAAQ,GACRX,QAAQ,CAAC,GAAD,CAAR,CACD,CAND,CASA;AAxBa,cAyBmBT,QAAQ,CAAC,EAAD,CAzB3B,wCAyBNsB,QAzBM,eAyBIC,WAzBJ,eA0Bb;AACAtB,SAAS,CAAC,UAAM,CACd,GAAMuB,CAAAA,IAAI,2FAAG,0KACUjB,CAAAA,QAAQ,CAACkB,MAAT,EADV,QACLC,MADK,gBAGXH,WAAW,CAACG,MAAD,CAAX,CAHW,wDAAH,kBAAJF,CAAAA,IAAI,2CAAV,CAKAA,IAAI,GACJ,MAAM,WAAI,CACVD,WAAW,CAAC,EAAD,CAAX,CAAgB,CADhB,CAED,CATQ,CASP,EATO,CAAT,CAWA,oBACE;AACA,MAAC,MAAD,yBACE,KAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,GAFP,CAGE,OAAO,cACL,KAAC,UAAD,EACE,UAAU,CAAEb,UADd,CAEE,QAAQ,CAAEY,QAFZ,CAGE,YAAY,CAAER,YAHhB,EAJJ,EADF,cAYE,KAAC,KAAD,EACE,IAAI,CAAC,SADP,CAEE,OAAO,cACL,KAAC,YAAD,EAAgB,QAAQ,CAAEQ,QAA1B,CAAoC,YAAY,CAAER,YAAlD,EAHJ,EAZF,GAFF,EAuBD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport ListOfBook from \"./ListOfBook\";\r\nimport AddAndSearch from \"./AddAndSearch\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nfunction App() {\r\n  let navigate = useNavigate();\r\n\r\n\r\n  const bookShelfs = [\r\n    { name: \"Currently Reading\", id: 1, shelfname: \"currentlyReading\" },\r\n    { name: \"Want to Read\", id: 2, shelfname: \"wantToRead\" },\r\n    { name: \"Read\", id: 3, shelfname: \"read\" },\r\n  ];\r\n\r\n  //updating the shelf of the book when selected another one\r\n  const handleupdate = (b, event) => {\r\n    b.shelf = event;\r\n    updateShelf(b, event);\r\n  };\r\n  const updateShelf = (b, s) => {\r\n    const newshelf = async () => {\r\n      await BooksAPI.update(b, s);\r\n    };\r\n    newshelf();\r\n    navigate(\"/\");\r\n  };\r\n\r\n \r\n  //initilaize list of books to empty arry\r\n  const [listBook, setListBook] = useState([]);\r\n  //get all books and set the list of book with results\r\n  useEffect(() => {\r\n    const book = async () => {\r\n      const result = await BooksAPI.getAll();\r\n     \r\n      setListBook(result);\r\n    };\r\n    book();\r\n    return()=>{\r\n    setListBook([])}\r\n  },[]);\r\n\r\n  return (\r\n    //using routes to navigate between pages and updating the url\r\n    <Routes>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        element={\r\n          <ListOfBook\r\n            bookShelfs={bookShelfs}\r\n            listBook={listBook}\r\n            handleupdate={handleupdate}\r\n          />\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/search\"\r\n        element={\r\n          <AddAndSearch   listBook={listBook} handleupdate={handleupdate} \r\n          />\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}