{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\AddAndSearch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport EachBook from \"./EachBook\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\"; //the add button will display this page with a search bar\n// when searching for a book with title or author will be shown on the page\n//when select a different shelf will call the handleupdate func to update the shelf\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAndSearch = ({\n  handleupdate,\n  listBook\n}) => {\n  _s();\n\n  const [searches, setSearches] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  let t;\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearchQuery(e.target.value.trim());\n    updateListSearch(e.target.value);\n    t = searchQuery.length === 0 ? div : searches.filter(b => (b.title + b.authors.join()).toLowerCase().includes(searchQuery.toLowerCase())).map(book => /*#__PURE__*/_jsxDEV(EachBook, {\n      book: book,\n      handleupdate: handleupdate\n    }, book.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this));\n  };\n\n  const updateListSearch = q => {\n    const res = async () => {\n      const a = await BooksAPI.search(q);\n      setSearches(listBook.concat(a));\n    };\n\n    if (searchQuery !== 0) {\n      if (res.error) {\n        setSearches([]);\n      } else {\n        res();\n      }\n    } else {\n      setSearches([]);\n    }\n  };\n  /* useEffect(() => {\r\n     \r\n     const book = async () => {\r\n       if(searchQuery!==\"\"){\r\n         const result = await BooksAPI.search();\r\n       setSearches(result);}\r\n     };\r\n     book();\r\n     return()=>{\r\n     setSearches([])}\r\n   }, []);*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"close-search\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, or author\",\n            value: searchQuery,\n            onChange: event => {\n              handleSearch(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddAndSearch, \"7gnrIlEK3qyyCY6Q03WHH6XIehk=\");\n\n_c = AddAndSearch;\nAddAndSearch.propTypes = {\n  listBook: PropTypes.array.isRequired,\n  handleupdate: PropTypes.func.isRequired\n};\nexport default AddAndSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAndSearch\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/AddAndSearch.js"],"names":["PropTypes","Link","EachBook","useState","useEffect","BooksAPI","AddAndSearch","handleupdate","listBook","searches","setSearches","searchQuery","setSearchQuery","t","handleSearch","e","preventDefault","target","value","trim","updateListSearch","length","div","filter","b","title","authors","join","toLowerCase","includes","map","book","q","res","a","search","concat","error","event","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EachBook from \"./EachBook\";\r\nimport {useState,useEffect} from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\"\r\n//the add button will display this page with a search bar\r\n// when searching for a book with title or author will be shown on the page\r\n//when select a different shelf will call the handleupdate func to update the shelf\r\nconst AddAndSearch = ({\r\n  handleupdate,\r\n  listBook\r\n}) => {\r\n  const [searches,setSearches]=useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  let t;\r\n  const handleSearch = (e) => {\r\n  e.preventDefault();\r\n    setSearchQuery(e.target.value.trim());\r\n    updateListSearch(e.target.value);\r\n    t= searchQuery.length===0? (div):searches.filter((b)=>((b.title+b.authors.join()).toLowerCase().includes(searchQuery.toLowerCase())))\r\n      .map((book) => (\r\n        <EachBook\r\n          book={book}\r\n          key={book.title}\r\n          handleupdate={handleupdate}\r\n        />\r\n      ))\r\n      \r\n  }; \r\n\r\n  const updateListSearch = (q) => {\r\n \r\n    const res = async()=>{\r\n      const a=await BooksAPI.search(q);\r\n    setSearches(listBook.concat(a))\r\n  }\r\n  if(searchQuery!==0){\r\n  \r\n    if(res.error){\r\n  setSearches([])\r\n}\r\nelse{\r\n    res();\r\n}\r\n  }else{setSearches([])}\r\n\r\n}\r\n /* useEffect(() => {\r\n    \r\n    const book = async () => {\r\n      if(searchQuery!==\"\"){\r\n        const result = await BooksAPI.search();\r\n      setSearches(result);}\r\n    };\r\n    book();\r\n    return()=>{\r\n    setSearches([])}\r\n  }, []);*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, or author\"\r\n              value={searchQuery}\r\n              onChange={(event) => {\r\n                handleSearch(event);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n  \r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n{t}\r\n</ol>\r\n          </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nAddAndSearch.propTypes = {\r\n  listBook: PropTypes.array.isRequired,\r\n  handleupdate: PropTypes.func.isRequired,\r\n};\r\nexport default AddAndSearch;\r\n"]},"metadata":{},"sourceType":"module"}