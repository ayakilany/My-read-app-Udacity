{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\ShelfMain.js\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShelfMain = ({\n  shelf,\n  listBook,\n  handleupdate\n}) => {\n  //shelf page each shelf will be display with the map method using it in ListOfBook file\n  //filtering the book to replace each one in his shelf\n  //select option onchange will call the func handleupdate to update the shelf\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bookshelf-title\",\n        children: shelf.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf-books\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: listBook.filter(b => b.shelf.replace(/ +/g, \"\").toLowerCase() === shelf.name.replace(/ +/g, \"\").toLowerCase()).map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"book-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"book-cover\",\n                  style: {\n                    width: 128,\n                    height: 193,\n                    backgroundImage: `url(${book.imageLinks.smallThumbnail})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"book-shelf-changer\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: book.shelf,\n                    onChange: e => handleupdate(book, e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      disabled: true,\n                      children: \"Move to...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 35,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"currentlyReading\",\n                      name: \"currentlyReading\",\n                      children: \"Currently Reading\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 36,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"wantToRead\",\n                      name: \"wantToRead\",\n                      children: \"Want to Read\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"read\",\n                      name: \"read\",\n                      children: \"Read\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"none\",\n                      name: \"none\",\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"book-title\",\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"book-authors\",\n                children: book.authors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this)\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ShelfMain;\nShelfMain.protoTypes = {\n  handleupdate: PropTypes.func.isRequired\n};\nexport default ShelfMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShelfMain\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/ShelfMain.js"],"names":["PropTypes","ShelfMain","shelf","listBook","handleupdate","name","filter","b","replace","toLowerCase","map","book","width","height","backgroundImage","imageLinks","smallThumbnail","e","target","value","title","authors","id","protoTypes","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nconst ShelfMain = ({ shelf, listBook, handleupdate }) => {\r\n  //shelf page each shelf will be display with the map method using it in ListOfBook file\r\n  //filtering the book to replace each one in his shelf\r\n  //select option onchange will call the func handleupdate to update the shelf\r\n  return (\r\n    <div className=\"list-books-content\">\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{shelf.name}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {listBook\r\n              .filter(\r\n                (b) =>\r\n                  b.shelf.replace(/ +/g, \"\").toLowerCase() ===\r\n                  shelf.name.replace(/ +/g, \"\").toLowerCase()\r\n              )\r\n              .map((book) => (\r\n                <li key={book.id}>\r\n                  <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                      <div\r\n                        className=\"book-cover\"\r\n                        style={{\r\n                          width: 128,\r\n                          height: 193,\r\n                          backgroundImage: `url(${book.imageLinks.smallThumbnail})`,\r\n                        }}\r\n                      ></div>\r\n                      <div className=\"book-shelf-changer\">\r\n                        <select\r\n                          value={book.shelf}\r\n                          onChange={(e) => handleupdate(book, e.target.value)}\r\n                        >\r\n                          <option disabled>Move to...</option>\r\n                          <option\r\n                            value=\"currentlyReading\"\r\n                            name=\"currentlyReading\"\r\n                          >\r\n                            Currently Reading\r\n                          </option>\r\n                          <option value=\"wantToRead\" name=\"wantToRead\">\r\n                            Want to Read\r\n                          </option>\r\n                          <option value=\"read\" name=\"read\">\r\n                            Read\r\n                          </option>\r\n                          <option value=\"none\" name=\"none\">\r\n                            None\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors}</div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nShelfMain.protoTypes = {\r\n  handleupdate: PropTypes.func.isRequired,\r\n};\r\nexport default ShelfMain;\r\n"]},"metadata":{},"sourceType":"module"}