{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\ListOfBook.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport serializeForm from \"form-serialize\";\nimport ShelfMain from \"./ShelfMain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListOfBook = ({\n  bookShelfs,\n  listBook,\n  updateShelf\n}) => {\n  _s();\n\n  const handleupdate = event => {\n    const new1 = serializeForm(event, {\n      hash: true\n    });\n\n    if (updateShelf) {\n      updateShelf(new1);\n    }\n  };\n\n  const [shelves, setShelves] = useState(listBook.map(b => b.shelf));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), bookShelfs.map(s => /*#__PURE__*/_jsxDEV(ShelfMain, {\n        shelf: s.name,\n        listBook: listBook,\n        handleupdate: handleupdate\n      }, s.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListOfBook, \"5+LbfbL5Hw9Zoq748INM5Z5Hi2w=\");\n\n_c = ListOfBook;\nexport default ListOfBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfBook\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/ListOfBook.js"],"names":["Link","serializeForm","ShelfMain","ListOfBook","bookShelfs","listBook","updateShelf","handleupdate","event","new1","hash","shelves","setShelves","useState","map","b","shelf","s","name","id"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAA0C;AAAA;;AAE7D,QAAMC,YAAY,GAAEC,KAAD,IACnB;AAAC,UAAMC,IAAI,GAACR,aAAa,CAACO,KAAD,EAAO;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAP,CAAxB;;AACC,QAAGJ,WAAH,EAAe;AACbA,MAAAA,WAAW,CAACG,IAAD,CAAX;AACD;AACF,GALD;;AAMA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAACR,QAAQ,CAACS,GAAT,CAAcC,CAAD,IAAKA,CAAC,CAACC,KAApB,CAAD,CAAtC;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGZ,UAAU,CAACU,GAAX,CAAgBG,CAAD,iBAAQ,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,CAAC,CAACC,IAApB;AACb,QAAA,QAAQ,EAAEb,QADG;AACO,QAAA,YAAY,EAAEE;AADrB,SACnBU,CAAC,CAACE,EADiB;AAAA;AAAA;AAAA;AAAA,cAAvB,CAJH,eAOE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxBD;;GAAMhB,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport serializeForm from \"form-serialize\";\r\nimport ShelfMain from \"./ShelfMain\";\r\nconst ListOfBook = ({ bookShelfs, listBook,updateShelf }) => {\r\n\r\nconst handleupdate=(event)=>\r\n{const new1=serializeForm(event,{hash:true})\r\n  if(updateShelf){\r\n    updateShelf(new1)\r\n  }\r\n}\r\nconst [shelves, setShelves] = useState(listBook.map((b)=>b.shelf));\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        {bookShelfs.map((s) => (<ShelfMain shelf={s.name}\r\n        key={s.id} listBook={listBook} handleupdate={handleupdate}\r\n        />))}\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">Add</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ListOfBook;\r\n"]},"metadata":{},"sourceType":"module"}