{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\AddAndSearch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport EachBook from \"./EachBook\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchResult from \"./SearchResult\"; //the add button will display this page with a search bar\n// when searching for a book with title or author will be shown on the page\n//when select a different shelf will call the handleupdate func to update the shelf\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAndSearch = ({\n  handleupdate,\n  listBook\n}) => {\n  _s();\n\n  const [searches, setSearches] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearchQuery(e.target.value.trim()); //    updateListSearch(e.target.value)\n  };\n  /* const updateListSearch = (q) => {\r\n  \r\n     const res = async()=>{\r\n       const a=await BooksAPI.search(q);\r\n     setSearches(listBook.concat(a))\r\n   }\r\n     res();\r\n  }*/\n\n\n  useEffect(() => {\n    const book = async () => {\n      if (searchQuery !== \"\") {\n        const result = await BooksAPI.search(searchQuery);\n      }\n\n      if (result.error) {\n        setSearches([]);\n      }\n    };\n\n    book();\n    return () => {\n      setSearches([]);\n    };\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"close-search\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, or author\",\n            value: searchQuery,\n            onChange: event => {\n              handleSearch(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchResult, {\n        searches: searches,\n        handleupdate: handleupdate,\n        searchQuery: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddAndSearch, \"1Xj4tNUfKHvk1lZp0Z4kfXdW0eU=\");\n\n_c = AddAndSearch;\nAddAndSearch.propTypes = {\n  listBook: PropTypes.array.isRequired,\n  handleupdate: PropTypes.func.isRequired\n};\nexport default AddAndSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAndSearch\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/AddAndSearch.js"],"names":["PropTypes","Link","EachBook","useState","useEffect","BooksAPI","SearchResult","AddAndSearch","handleupdate","listBook","searches","setSearches","searchQuery","setSearchQuery","handleSearch","e","preventDefault","target","value","trim","book","result","search","error","event","propTypes","array","isRequired","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,YADoB;AAEpBC,EAAAA;AAFoB,CAAD,KAGf;AAAA;;AACJ,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACEH,IAAAA,cAAc,CAACE,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAD,CAAd,CAF0B,CAG9B;AACG,GAJD;AAMD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEf,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMgB,IAAI,GAAG,YAAY;AACvB,UAAGR,WAAW,KAAG,EAAjB,EAAoB;AAClB,cAAMS,MAAM,GAAG,MAAMhB,QAAQ,CAACiB,MAAT,CAAgBV,WAAhB,CAArB;AACA;;AAAC,UAAGS,MAAM,CAACE,KAAV,EAAgB;AACnBZ,QAAAA,WAAW,CAAC,EAAD,CAAX;AAAgB;AACjB,KALD;;AAMAS,IAAAA,IAAI;AACJ,WAAM,MAAI;AACVT,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAFC;AAGD,GAZQ,EAYN,CAACC,WAAD,CAZM,CAAT;AAcA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,4BAFd;AAGE,YAAA,KAAK,EAAEA,WAHT;AAIE,YAAA,QAAQ,EAAGY,KAAD,IAAW;AACnBV,cAAAA,YAAY,CAACU,KAAD,CAAZ;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBG,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEd,QAAxB;AAAkC,QAAA,YAAY,EAAEF,YAAhD;AAA+D,QAAA,WAAW,EAAEI;AAA5E;AAAA;AAAA;AAAA;AAAA,cAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAxDD;;GAAML,Y;;KAAAA,Y;AAyDNA,YAAY,CAACkB,SAAb,GAAyB;AACvBhB,EAAAA,QAAQ,EAAET,SAAS,CAAC0B,KAAV,CAAgBC,UADH;AAEvBnB,EAAAA,YAAY,EAAER,SAAS,CAAC4B,IAAV,CAAeD;AAFN,CAAzB;AAIA,eAAepB,YAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EachBook from \"./EachBook\";\r\nimport {useState,useEffect} from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport SearchResult from \"./SearchResult\";\r\n//the add button will display this page with a search bar\r\n// when searching for a book with title or author will be shown on the page\r\n//when select a different shelf will call the handleupdate func to update the shelf\r\nconst AddAndSearch = ({\r\n  handleupdate,\r\n  listBook\r\n}) => {\r\n  const [searches,setSearches]=useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const handleSearch = (e) => {\r\n  e.preventDefault();\r\n    setSearchQuery(e.target.value.trim());\r\n//    updateListSearch(e.target.value)\r\n  }; \r\n\r\n /* const updateListSearch = (q) => {\r\n \r\n    const res = async()=>{\r\n      const a=await BooksAPI.search(q);\r\n    setSearches(listBook.concat(a))\r\n  }\r\n    res();\r\n}*/\r\n  useEffect(() => {\r\n    \r\n    const book = async () => {\r\n      if(searchQuery!==\"\"){\r\n        const result = await BooksAPI.search(searchQuery);\r\n       } if(result.error){\r\n      setSearches([])}\r\n    };\r\n    book();\r\n    return()=>{\r\n    setSearches([])\r\n  }\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, or author\"\r\n              value={searchQuery}\r\n              onChange={(event) => {\r\n                handleSearch(event);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n         <SearchResult searches={searches} handleupdate={handleupdate}  searchQuery={searchQuery}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nAddAndSearch.propTypes = {\r\n  listBook: PropTypes.array.isRequired,\r\n  handleupdate: PropTypes.func.isRequired,\r\n};\r\nexport default AddAndSearch;\r\n"]},"metadata":{},"sourceType":"module"}