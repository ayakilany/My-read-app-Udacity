{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\ShelfMain.js\";\nimport PropTypes from \"prop-types\";\nimport EachBook from \"./EachBook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShelfMain = ({\n  shelf,\n  listBook,\n  handleupdate\n}) => {\n  //shelf page each shelf will be display with the map method using it in ListOfBook file\n  //filtering the book to replace each one in his shelf\n  //select option onchange will call the func handleupdate to update the shelf\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bookshelf-title\",\n        children: shelf.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf-books\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: listBook.filter(b => b.shelf.replace(/ +/g, \"\").toLowerCase() === shelf.name.replace(/ +/g, \"\").toLowerCase()).map(book => /*#__PURE__*/_jsxDEV(EachBook, {\n            book: book,\n            handleupdate: handleupdate\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ShelfMain;\nShelfMain.protoTypes = {\n  handleupdate: PropTypes.func.isRequired\n};\nexport default ShelfMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShelfMain\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/ShelfMain.js"],"names":["PropTypes","EachBook","ShelfMain","shelf","listBook","handleupdate","name","filter","b","replace","toLowerCase","map","book","id","protoTypes","func","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAuC;AACvD;AACA;AACA;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCF,KAAK,CAACG;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACGF,QAAQ,CACNG,MADF,CAEIC,CAAD,IACEA,CAAC,CAACL,KAAF,CAAQM,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,EAA2BC,WAA3B,OACAP,KAAK,CAACG,IAAN,CAAWG,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,EAA8BC,WAA9B,EAJL,EAMEC,GANF,CAMOC,IAAD,iBACH,QAAC,QAAD;AAAW,YAAA,IAAI,EAAEA,IAAjB;AAAuB,YAAA,YAAY,EAAEP;AAArC,aAAwDO,IAAI,CAACC,EAA7D;AAAA;AAAA;AAAA;AAAA,kBAPH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxBD;;KAAMX,S;AAyBNA,SAAS,CAACY,UAAV,GAAuB;AACrBT,EAAAA,YAAY,EAAEL,SAAS,CAACe,IAAV,CAAeC;AADR,CAAvB;AAGA,eAAed,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport EachBook from \"./EachBook\";\r\nconst ShelfMain = ({ shelf, listBook, handleupdate }) => {\r\n  //shelf page each shelf will be display with the map method using it in ListOfBook file\r\n  //filtering the book to replace each one in his shelf\r\n  //select option onchange will call the func handleupdate to update the shelf\r\n  return (\r\n    <div className=\"list-books-content\">\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{shelf.name}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {listBook\r\n              .filter(\r\n                (b) =>\r\n                  b.shelf.replace(/ +/g, \"\").toLowerCase() ===\r\n                  shelf.name.replace(/ +/g, \"\").toLowerCase()\r\n              )\r\n              .map((book) => (\r\n                <EachBook  book={book} handleupdate={handleupdate} key={book.id}/>\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nShelfMain.protoTypes = {\r\n  handleupdate: PropTypes.func.isRequired,\r\n};\r\nexport default ShelfMain;\r\n"]},"metadata":{},"sourceType":"module"}