{"ast":null,"code":"var _jsxFileName = \"E:\\\\1111react cross skilling udacity fwd\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport ListOfBook from \"./ListOfBook\";\nimport AddAndSearch from \"./AddAndSearch\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let navigate = useNavigate();\n  const bookShelfs = [{\n    name: \"Currently Reading\",\n    id: 1,\n    shelfname: \"currentlyReading\"\n  }, {\n    name: \"Want to Read\",\n    id: 2,\n    shelfname: \"wantToRead\"\n  }, {\n    name: \"Read\",\n    id: 3,\n    shelfname: \"read\"\n  }]; //updating the shelf of the book when selected another one\n\n  const handleupdate = (b, event) => {\n    b.shelf = event;\n    updateShelf(b, event);\n  };\n\n  const updateShelf = (b, s) => {\n    const newshelf = async () => {\n      await BooksAPI.update(b, s);\n    };\n\n    newshelf();\n    navigate(\"/\");\n  };\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearchQuery(e);\n    updateListSearch(e);\n  };\n\n  const updateListSearch = q => {\n    const res = async () => {\n      const a = await BooksAPI.search(q);\n      setListBook(listBook.concat(a));\n    };\n\n    res();\n  }; //initilaize list of books to empty arry\n\n\n  const [listBook, setListBook] = useState([]); //get all books and set the list of book with results\n\n  useEffect(() => {\n    const book = async () => {\n      const result = await BooksAPI.getAll();\n      setListBook(result);\n    };\n\n    book();\n    return () => {\n      setListBook([]);\n    };\n  }, []);\n  return (\n    /*#__PURE__*/\n    //using routes to navigate between pages and updating the url\n    _jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ListOfBook, {\n          bookShelfs: bookShelfs,\n          listBook: listBook,\n          handleupdate: handleupdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(AddAndSearch, {\n          handleupdate: handleupdate,\n          handleSearch: handleSearch,\n          searchQuery: searchQuery,\n          searches: listBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"D4kZ907mmqYZboiG3dar/EO2g7E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/App.js"],"names":["useState","useEffect","Routes","Route","useNavigate","ListOfBook","AddAndSearch","BooksAPI","App","navigate","bookShelfs","name","id","shelfname","handleupdate","b","event","shelf","updateShelf","s","newshelf","update","searchQuery","setSearchQuery","handleSearch","e","preventDefault","updateListSearch","q","res","a","search","setListBook","listBook","concat","book","result","getAll"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport ListOfBook from \"./ListOfBook\";\r\nimport AddAndSearch from \"./AddAndSearch\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nfunction App() {\r\n  let navigate = useNavigate();\r\n\r\n\r\n  const bookShelfs = [\r\n    { name: \"Currently Reading\", id: 1, shelfname: \"currentlyReading\" },\r\n    { name: \"Want to Read\", id: 2, shelfname: \"wantToRead\" },\r\n    { name: \"Read\", id: 3, shelfname: \"read\" },\r\n  ];\r\n\r\n  //updating the shelf of the book when selected another one\r\n  const handleupdate = (b, event) => {\r\n    b.shelf = event;\r\n    updateShelf(b, event);\r\n  };\r\n  const updateShelf = (b, s) => {\r\n    const newshelf = async () => {\r\n      await BooksAPI.update(b, s);\r\n    };\r\n    newshelf();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const handleSearch = (e) => {\r\n  e.preventDefault();\r\n    setSearchQuery(e);\r\n    updateListSearch(e)\r\n  }; \r\n  \r\n  const updateListSearch = (q) => {\r\n    const res = async()=>{\r\n    const a=await BooksAPI.search(q);\r\n    setListBook(listBook.concat(a))\r\n  }\r\n    res();\r\n  }\r\n  //initilaize list of books to empty arry\r\n  const [listBook, setListBook] = useState([]);\r\n \r\n  //get all books and set the list of book with results\r\n  useEffect(() => {\r\n    const book = async () => {\r\n      const result = await BooksAPI.getAll();\r\n     \r\n      setListBook(result);\r\n    };\r\n    book();\r\n    return()=>{\r\n    setListBook([])}\r\n  }, []);\r\n\r\n  return (\r\n    //using routes to navigate between pages and updating the url\r\n    <Routes>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        element={\r\n          <ListOfBook\r\n            bookShelfs={bookShelfs}\r\n            listBook={listBook}\r\n            handleupdate={handleupdate}\r\n          />\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/search\"\r\n        element={\r\n          <AddAndSearch  handleupdate={handleupdate} handleSearch={handleSearch}\r\n            searchQuery={searchQuery} searches={listBook}/>\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}