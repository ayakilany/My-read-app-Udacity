{"ast":null,"code":"import _regeneratorRuntime from\"E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Link}from\"react-router-dom\";import{useState,useEffect}from\"react\";import*as BooksAPI from\"./BooksAPI\";import SearchResult from\"./SearchResult\";//the add button will display this page with a search bar\n// when searching for a book with title or author will be shown on the page\n//when select a different shelf will call the handleupdate func to update the shelf\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddAndSearch=function AddAndSearch(_ref){var listBook=_ref.listBook,handleupdate=_ref.handleupdate;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),searches=_useState2[0],setSearches=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchQuery=_useState4[0],setSearchQuery=_useState4[1];var handleSearch=function handleSearch(e){e.preventDefault();setSearchQuery(e.target.value);};useEffect(function(){var cleaner=true;var book=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(searchQuery!==\"\")){_context.next=5;break;}_context.next=3;return BooksAPI.search(searchQuery);case 3:result=_context.sent;if(result.error){setSearches([]);}else{if(cleaner){setSearches(listBook.concat(result));console.log(result);}}case 5:case\"end\":return _context.stop();}}},_callee);}));return function book(){return _ref2.apply(this,arguments);};}();book();return function(){cleaner=false;setSearches([]);};},[searchQuery]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-books\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-books-bar\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"close-search\",children:\"Close\"}),/*#__PURE__*/_jsx(\"div\",{className:\"search-books-input-wrapper\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by title, or author\",value:searchQuery,onChange:function onChange(event){handleSearch(event);}})})]}),/*#__PURE__*/_jsx(SearchResult,{searches:searches,handleupdate:handleupdate,searchQuery:searchQuery,listBook:listBook})]})});};export default AddAndSearch;","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/AddAndSearch.js"],"names":["Link","useState","useEffect","BooksAPI","SearchResult","AddAndSearch","listBook","handleupdate","searches","setSearches","searchQuery","setSearchQuery","handleSearch","e","preventDefault","target","value","cleaner","book","search","result","error","concat","console","log","event"],"mappings":"qiBACA,OAASA,IAAT,KAAqB,kBAArB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,YAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA;AACA;AACA;wFACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAGf,IAFJC,CAAAA,QAEI,MAFJA,QAEI,CAFMC,YAEN,MAFMA,YAEN,eAC4BN,QAAQ,CAAC,EAAD,CADpC,wCACGO,QADH,eACaC,WADb,8BAEkCR,QAAQ,CAAC,EAAD,CAF1C,yCAEGS,WAFH,eAEgBC,cAFhB,eAIJ,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACAH,cAAc,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd,CACD,CAHD,CAKAd,SAAS,CAAC,UAAM,CACd,GAAIe,CAAAA,OAAO,CAAG,IAAd,CACA,GAAMC,CAAAA,IAAI,2FAAG,mJACPR,WAAW,GAAK,EADT,gDAEYP,CAAAA,QAAQ,CAACgB,MAAT,CAAgBT,WAAhB,CAFZ,QAEHU,MAFG,eAGT,GAAIA,MAAM,CAACC,KAAX,CAAkB,CAChBZ,WAAW,CAAC,EAAD,CAAX,CACD,CAFD,IAGK,CACH,GAAIQ,OAAJ,CAAa,CACXR,WAAW,CAACH,QAAQ,CAACgB,MAAT,CAAgBF,MAAhB,CAAD,CAAX,CACAG,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EACD,CACF,CAXQ,sDAAH,kBAAJF,CAAAA,IAAI,2CAAV,CAcAA,IAAI,GACJ,MAAO,WAAM,CACXD,OAAO,CAAG,KAAV,CACAR,WAAW,CAAC,EAAD,CAAX,CACD,CAHD,CAID,CArBQ,CAqBN,CAACC,WAAD,CArBM,CAAT,CAuBA,mBACE,kCACE,aAAK,SAAS,CAAC,cAAf,wBACE,aAAK,SAAS,CAAC,kBAAf,wBACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,cAAvB,mBADF,cAIE,YAAK,SAAS,CAAC,4BAAf,uBACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,4BAFd,CAGE,KAAK,CAAEA,WAHT,CAIE,QAAQ,CAAE,kBAACe,KAAD,CAAW,CACnBb,YAAY,CAACa,KAAD,CAAZ,CACD,CANH,EADF,EAJF,GADF,cAgBE,KAAC,YAAD,EAAc,QAAQ,CAAEjB,QAAxB,CAAkC,YAAY,CAAED,YAAhD,CAA8D,WAAW,CAAEG,WAA3E,CAAwF,QAAQ,CAAEJ,QAAlG,EAhBF,GADF,EADF,CAsBD,CAzDD,CA8DA,cAAeD,CAAAA,YAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport SearchResult from \"./SearchResult\";\r\n//the add button will display this page with a search bar\r\n// when searching for a book with title or author will be shown on the page\r\n//when select a different shelf will call the handleupdate func to update the shelf\r\nconst AddAndSearch = ({\r\n  listBook, handleupdate\r\n\r\n}) => {\r\n  const [searches, setSearches] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setSearchQuery(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let cleaner = true;\r\n    const book = async () => {\r\n      if (searchQuery !== \"\") {\r\n        const result = await BooksAPI.search(searchQuery);\r\n        if (result.error) {\r\n          setSearches([])\r\n        }\r\n        else {\r\n          if (cleaner) {\r\n            setSearches(listBook.concat(result))\r\n            console.log(result)\r\n          }\r\n        }\r\n      }\r\n    };\r\n    book();\r\n    return () => {\r\n      cleaner = false;\r\n      setSearches([])\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, or author\"\r\n              value={searchQuery}\r\n              onChange={(event) => {\r\n                handleSearch(event);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <SearchResult searches={searches} handleupdate={handleupdate} searchQuery={searchQuery} listBook={listBook} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nAddAndSearch.propTypes = {\r\n  listBook: PropTypes.array.isRequired,\r\n  handleupdate: PropTypes.func.isRequired,\r\n};\r\nexport default AddAndSearch;\r\n"]},"metadata":{},"sourceType":"module"}