{"ast":null,"code":"import _objectSpread from\"E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var api=\"https://reactnd-books-api.udacity.com\";var token=localStorage.token;if(!token)token=localStorage.token=Math.random().toString(36).substr(-8);var headers={Accept:\"application/json\",Authorization:token};export var get=function get(bookId){return fetch(\"\".concat(api,\"/books/\").concat(bookId),{headers:headers}).then(function(res){return res.json();}).then(function(data){return data.book;});};export var getAll=function getAll(){return fetch(\"\".concat(api,\"/books\"),{headers:headers}).then(function(res){return res.json();}).then(function(data){return data.books;});};export var update=function update(book,shelf){return fetch(\"\".concat(api,\"/books/\").concat(book.id),{method:\"PUT\",headers:_objectSpread(_objectSpread({},headers),{},{\"Content-Type\":\"application/json\"}),body:JSON.stringify({shelf:shelf})}).then(function(res){return res.json();});};export var search=function search(query,maxResults){return fetch(\"\".concat(api,\"/search\"),{method:\"POST\",headers:_objectSpread(_objectSpread({},headers),{},{\"Content-Type\":\"application/json\"}),body:JSON.stringify({query:query,maxResults:maxResults})}).then(function(res){return res.json();}).then(function(data){return data.books;});};","map":{"version":3,"sources":["E:/1111react cross skilling udacity fwd/nd0191-c1-myreads/starter/src/BooksAPI.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","then","res","json","data","book","getAll","books","update","shelf","id","method","body","JSON","stringify","search","query","maxResults"],"mappings":"uLAAA,GAAMA,CAAAA,GAAG,CAAG,uCAAZ,CAEA,GAAIC,CAAAA,KAAK,CAAGC,YAAY,CAACD,KAAzB,CAEA,GAAI,CAACA,KAAL,CAAYA,KAAK,CAAGC,YAAY,CAACD,KAAb,CAAqBE,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAA7B,CAEZ,GAAMC,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAE,kBADM,CAEdC,aAAa,CAAER,KAFD,CAAhB,CAKA,MAAO,IAAMS,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,MAAD,QACjBC,CAAAA,KAAK,WAAIZ,GAAJ,mBAAiBW,MAAjB,EAA2B,CAAEJ,OAAO,CAAPA,OAAF,CAA3B,CAAL,CACGM,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAf,EAFR,CADiB,EAAZ,CAKP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SACpBN,CAAAA,KAAK,WAAIZ,GAAJ,WAAiB,CAAEO,OAAO,CAAPA,OAAF,CAAjB,CAAL,CACGM,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,QAAUA,CAAAA,IAAI,CAACG,KAAf,EAFR,CADoB,EAAf,CAKP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACH,IAAD,CAAOI,KAAP,QACpBT,CAAAA,KAAK,WAAIZ,GAAJ,mBAAiBiB,IAAI,CAACK,EAAtB,EAA4B,CAC/BC,MAAM,CAAE,KADuB,CAE/BhB,OAAO,gCACFA,OADE,MAEL,eAAgB,kBAFX,EAFwB,CAM/BiB,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEL,KAAK,CAALA,KAAF,CAAf,CANyB,CAA5B,CAAL,CAOGR,IAPH,CAOQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAPR,CADoB,EAAf,CAUP,MAAO,IAAMY,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAQC,UAAR,QACpBjB,CAAAA,KAAK,WAAIZ,GAAJ,YAAkB,CACrBuB,MAAM,CAAE,MADa,CAErBhB,OAAO,gCACFA,OADE,MAEL,eAAgB,kBAFX,EAFc,CAMrBiB,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEE,KAAK,CAALA,KAAF,CAASC,UAAU,CAAVA,UAAT,CAAf,CANe,CAAlB,CAAL,CAQGhB,IARH,CAQQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EARR,EASGF,IATH,CASQ,SAACG,IAAD,QAAUA,CAAAA,IAAI,CAACG,KAAf,EATR,CADoB,EAAf","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n"]},"metadata":{},"sourceType":"module"}